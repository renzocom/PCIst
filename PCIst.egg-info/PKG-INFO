Metadata-Version: 2.1
Name: PCIst
Version: 0.1.15
Summary: Short library to calculate PCIst.
Home-page: https://github.com/renzocom/PCIst
Author: Renzo Comolatti
Author-email: renzo.com@gmail.com
License: UNKNOWN
Description: # PCI<sup>ST</sup>
        A short library for calculating the state transitions Perturbational Complexity Index (PCI<sup>ST</sup>).
        
        The main function of the library is `calc_PCIst()`, which  is composed of two functions corresponding to the two steps involved is the computation of PCI<sup>ST</sup>: `dimensionality reduction()` and `state_transition_quantification()`. The parameters of calc_PCIst() are the inputs of these two functions. The output of `calc_PCIst()` is the PCI<sup>ST</sup> value and a list with the component wise PCI<sup>ST</sup> (âˆ†NST<sub>n</sub>).
        
        ## Basic Usage
        **TMS/EEG**
        ```python
        from pci_st import **
        par = {'baseline_window':(-400,-50), 'response_window':(0,300), 'k':1.2, 'min_snr':1.1, 'max_var':99, 'embed':False,'n_steps':100}
        pci = calc_PCIst(signal_evoked, times, **par)
        ```
        **SPES/SEEG**
        ```python
        from pci_st import **
        par = {'baseline_window':(-250,-50), 'response_window':(10,600), 'k':1.2, 'min_snr':1.1, 'max_var':99, 'embed':False,'n_steps':100, 'avgref': False}
        pci = calc_PCIst(signal_evoked, times, **par)
        ```
        
        ## Credit
        **Please cite this paper if you use this code:**
        
        Comolatti R et al., "A fast and general method to empirically estimate the complexity of brain responses to transcranial and intracranial stimulations" Brain Stimulation (in press) https://doi.org/10.1016/j.brs.2019.05.013
        
        Correspondance regarding the code can be directed to renzo.com@gmail.com 
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GPL License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
